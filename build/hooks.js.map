{"version":3,"file":"hooks.js","sourceRoot":"","sources":["../src/hooks.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,KAAK,YAAY,MAAM,SAAS,CAAC;AAExC;;;;GAIG;AACH,MAAM,UAAU,sBAAsB,CACpC,QAA6D;IAE7D,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,SAAS,GAAG,IAAI,CAAC;QAErB,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;YACzB,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,GAAG,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,EAAE;YAC7C,IAAI,SAAS,EAAE,CAAC;gBACd,QAAQ,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,EAAE;YACV,SAAS,GAAG,KAAK,CAAC;YAClB,GAAG,CAAC,MAAM,EAAE,CAAC;QACf,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;AACvC,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,cAAc;IAC5B,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC,QAAQ,CACxC,YAAY,CAAC,OAAO,IAAI,IAAI,CAC7B,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,MAAM,GAAG,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,EAAE;YAC7C,IAAI,SAAS,EAAE,CAAC;gBACd,SAAS,CAAC,KAAK,CAAC,CAAC;YACnB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,EAAE;YACV,SAAS,GAAG,KAAK,CAAC;YAClB,GAAG,CAAC,MAAM,EAAE,CAAC;QACf,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import React from \"react\";\nimport * as QuickActions from \"./index\";\n\n/**\n * Handle quick actions with a callback function. This prevents the entire component from re-rendering when the action changes. Use `useQuickAction` if you want to re-render the component.\n *\n * @param callback function that's called when a quick action launches the app. Will be instantly called with the initial action if it exists.\n */\nexport function useQuickActionCallback(\n  callback: (data: QuickActions.Action) => void | Promise<void>\n) {\n  React.useEffect(() => {\n    let isMounted = true;\n\n    if (QuickActions.initial) {\n      callback(QuickActions.initial);\n    }\n\n    const sub = QuickActions.addListener((event) => {\n      if (isMounted) {\n        callback(event);\n      }\n    });\n    return () => {\n      isMounted = false;\n      sub.remove();\n    };\n  }, [QuickActions.initial, callback]);\n}\n\n/**\n * A hook to get the most recent quick action to launch the app. Use `useQuickActionCallback` if you want to handle the action in a callback without re-rendering the component.\n *\n * @returns the most recent quick action to launch the app or null if there is none.\n */\nexport function useQuickAction(): QuickActions.Action | null {\n  const [action, setAction] = React.useState<QuickActions.Action | null>(\n    QuickActions.initial ?? null\n  );\n\n  React.useEffect(() => {\n    let isMounted = true;\n    const sub = QuickActions.addListener((event) => {\n      if (isMounted) {\n        setAction(event);\n      }\n    });\n    return () => {\n      isMounted = false;\n      sub.remove();\n    };\n  }, []);\n\n  return action;\n}\n"]}