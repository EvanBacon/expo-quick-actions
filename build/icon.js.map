{"version":3,"file":"icon.js","sourceRoot":"","sources":["../src/icon.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,2BAA2B,EAAE,MAAM,mBAAmB,CAAC;AAuB9E,MAAM,CAAC,MAAM,WAAW,GACtB,2BAA2B,CAAkB,aAAa,CAAC,CAAC","sourcesContent":["import { NativeModule, requireOptionalNativeModule } from \"expo-modules-core\";\n\ndeclare class ExpoAppIconType extends NativeModule {\n  /** Indicates whether the device supports alternate app icons. */\n  isSupported: boolean;\n\n  /**\n   * Sets the alternate app icon for the application.\n   * @param name The name of the alternate icon to set, or `null` to reset to the default icon.\n   * @return A `Promise` that resolves with the current alternate icon name, or `null` if no alternate icon is set.\n   * @throws {Error} If there is an error setting the alternate icon.\n   * @platform ios\n   */\n  setIcon(name: string | null): Promise<string | null>;\n\n  /**\n   * Gets the current alternate app icon name.\n   * @return A `Promise` that resolves with the current alternate icon name, or `null` if no alternate icon is set.\n   * @platform ios\n   */\n  getIcon(): Promise<string | null>;\n}\n\nexport const ExpoAppIcon =\n  requireOptionalNativeModule<ExpoAppIconType>(\"ExpoAppIcon\");\n"]}