{"version":3,"file":"ExpoQuickActions.js","sourceRoot":"","sources":["../src/ExpoQuickActions.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,YAAY,EAEZ,kBAAkB,GACnB,MAAM,mBAAmB,CAAC;AAC3B,MAAM,EAAE,gBAAgB,EAAE,GAAG,kBAAkB,CAAC;AAEhD,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,gBAAgB,CAAC,CAAC;AAEnD,MAAM,WAAW,GAAG,eAAe,CAAC;AAWpC,MAAM,CAAC,MAAM,OAAO,GAAuB,gBAAgB,CAAC,OAAO,CAAC;AAEpE,MAAM,CAAC,MAAM,QAAQ,GACnB,gBAAgB,CAAC,QAAQ,CAAC;AAE5B,MAAM,CAAC,MAAM,UAAU,GAA0B,gBAAgB,CAAC,UAAU,CAAC;AAC7E,MAAM,CAAC,MAAM,WAAW,GAA2B,gBAAgB,CAAC,WAAW,CAAC;AAEhF,MAAM,UAAU,WAAW,CAAC,QAAgC;IAC1D,OAAO,OAAO,CAAC,WAAW,CAAQ,WAAW,EAAE,QAAQ,CAAC,CAAC;AAC3D,CAAC","sourcesContent":["import {\n  EventEmitter,\n  Subscription,\n  NativeModulesProxy,\n} from \"expo-modules-core\";\nconst { ExpoQuickActions } = NativeModulesProxy;\n\nconst emitter = new EventEmitter(ExpoQuickActions);\n\nconst onEventName = \"onQuickAction\";\n\ntype Event = {};\ntype Action = {\n  icon?: unknown;\n  id: string;\n  subtitle?: string | null;\n  title: string;\n  userInfo?: Record<string, any> | null;\n};\n\nexport const initial: Action | undefined = ExpoQuickActions.initial;\n\nexport const setItems: (data?: Action[]) => Promise<void> =\n  ExpoQuickActions.setItems;\n\nexport const getInitial: () => Promise<Action> = ExpoQuickActions.getInitial;\nexport const isSupported: () => Promise<boolean> = ExpoQuickActions.isSupported;\n\nexport function addListener(listener: (event: Event) => void): Subscription {\n  return emitter.addListener<Event>(onEventName, listener);\n}\n"]}